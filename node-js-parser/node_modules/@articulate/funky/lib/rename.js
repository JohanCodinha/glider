var assoc    = require('ramda/src/assoc')
var converge = require('ramda/src/converge')
var dissoc   = require('ramda/src/dissoc')
var hasIn    = require('ramda/src/hasIn')
var prop     = require('ramda/src/prop')
var uncurryN = require('ramda/src/uncurryN')
var when     = require('ramda/src/when')

// rename :: String -> String -> { k: v } -> { k: v }
var rename = function (frum, to) { return when(hasIn(frum), converge(assoc(to), [ prop(frum), dissoc(frum) ])); }

module.exports = uncurryN(3, rename)
